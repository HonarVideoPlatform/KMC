<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:dtn="com.kaltura.kmc.modules.analytics.view.dtn.*"
		 xmlns:view="com.kaltura.kmc.modules.analytics.view.*" creationComplete="creationCompleteHandler(event)">

	<mx:Script>
		<![CDATA[
			import com.kaltura.analytics.GoogleAnalyticsConsts;
			import com.kaltura.analytics.GoogleAnalyticsTracker;
			import com.kaltura.edw.business.permissions.PermissionManager;
			import com.kaltura.kmc.events.KmcHelpEvent;
			import com.kaltura.kmc.modules.analytics.control.PermissionEvent;
			import com.kaltura.kmc.modules.analytics.control.StateEvent;
			import com.kaltura.kmc.modules.analytics.model.AnalyticsModelLocator;
			import com.kaltura.kmc.modules.analytics.model.reportdata.ReportData;
			import com.kaltura.kmc.modules.analytics.model.types.ScreenTypes;
			import com.kaltura.kmc.modules.analytics.view.dtn.DTNItem;
			import com.kaltura.types.KalturaReportType;
			import com.kaltura.types.KalturaStatsKmcEventType;
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.resources.ResourceManager;


			[Bindable]
			private var _model:AnalyticsModelLocator = AnalyticsModelLocator.getInstance();

			private var _ready:Boolean = false;


			public function help():void {
				var anchor:String = (userViewStack.selectedChild as KalturaReportView).helpUrl;
				dispatchEvent(new KmcHelpEvent(KmcHelpEvent.HELP, anchor));
			}


			public function init(e:Event = null):void {
				if (_ready) {
					BindingUtils.bindSetter(onStateChange, _model, "currentScreenState");
					BindingUtils.bindSetter(selectedReportChange, _model, "selectedReportData");

					var stateEvent:StateEvent = new StateEvent(StateEvent.STATE_CHANGE,
						ScreenTypes.TOP_CONTRIBUTORS);
					stateEvent.dispatch();

					// initialize the first report:
					topContributors.onShow();
				}
				else {
					_ready = true;
					addEventListener(FlexEvent.CREATION_COMPLETE, init);
				}
			}


			/**
			 * @internal
			 * the getter is required for roles and permissions for its type,
			 * the value is irrelevant
			 * */
			public function get showMapOverlay():Boolean {
				return true;
			}


			public function set showMapOverlay(value:Boolean):void {
				var cg:PermissionEvent = new PermissionEvent(PermissionEvent.REMOVE_REPORT);
				cg.data = ResourceManager.getInstance().getString('analytics', 'mapOverlay');
				cg.dispatch();
			}


			protected function creationCompleteHandler(event:FlexEvent):void {
				_model.userDtnDp.addEventListener(CollectionEvent.COLLECTION_CHANGE, resetDP, false, 0, true);
				PermissionManager.getInstance().applyAllAttributes(this, "analytics.users");
				_ready = true;
			}


			private function onDrillDown(newState:int):void {
				var stateEvent:StateEvent = new StateEvent(StateEvent.STATE_CHANGE, newState);
				stateEvent.dispatch();
			}


			private function onDtnChange():void {
				if (dtn.selectedIndex == 0) {
					(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.TOP_CONTRIBUTORS)).dispatch();
				}
				else if (dtn.selectedIndex == 1) {
					(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.MAP_OVERLAY)).dispatch();
				}
				else if (dtn.selectedIndex == 2) {
					(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.TOP_SYNDICATIONS)).dispatch();
				}
				else if (dtn.selectedIndex == 3) {
					(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.END_USER_ENGAGEMENT)).dispatch();
				}
			}


			private function onStateChange(newState:int):void {
				var gaEvent:String;
				switch (newState) {
					case ScreenTypes.TOP_CONTRIBUTORS:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_TOP_CONTRIBUTORS;
						userViewStack.selectedIndex = dtn.selectedIndex = 0;
						break;
					case ScreenTypes.MAP_OVERLAY:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_MAP_OVERLAYS;
						userViewStack.selectedIndex = dtn.selectedIndex = 1;
						break;
					case ScreenTypes.TOP_SYNDICATIONS:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_TOP_SYNDICATIONS;
						userViewStack.selectedIndex = dtn.selectedIndex = 2;
						break;
					case ScreenTypes.END_USER_ENGAGEMENT:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_USER_ENGAGEMENT;
						userViewStack.selectedIndex = dtn.selectedIndex = 3;
						break;
					case ScreenTypes.TOP_SYNDICATIONS_DRILL_DOWN:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_TOP_SYNDICATIONS_DRILL_DOWN;
						userViewStack.selectedIndex = 4;
						dtn.selectedIndex = -1;
						(dtn.getChildAt(2) as DTNItem).btn.styleName = "selectedDtnBtn";
						break;
					case ScreenTypes.MAP_OVERLAY_DRILL_DOWN:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_MAP_OVERLAYS_DRILLDOWN;
						userViewStack.selectedIndex = 5;
						dtn.selectedIndex = -1;
						(dtn.getChildAt(1) as DTNItem).btn.styleName = "selectedDtnBtn";
						break;
					case ScreenTypes.END_USER_ENGAGEMENT_DRILL_DOWN:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_USER_ENGAGEMEN_DRILL_DOWN;
						userViewStack.selectedIndex = 6;
						dtn.selectedIndex = -1;
						(dtn.getChildAt(3) as DTNItem).btn.styleName = "selectedDtnBtn";
						break;
					default:
						// the new screen is not in Users's scope, need to hide panel
						(userViewStack.selectedChild as KalturaReportView).onHide();
				}
				if (gaEvent) {
					GoogleAnalyticsTracker.getInstance().sendToGA(GoogleAnalyticsConsts.PAGE_VIEW + gaEvent, GoogleAnalyticsConsts.ANALYTICS);
				}
			}


			private function resetDP(e:CollectionEvent):void {
//				dtn.dataProvider = null;
				dtn.dataProvider = _model.userDtnDp;
			}


			private function selectedReportChange(selectedReport:ReportData):void {
				if (selectedReport && selectedReport.aggregatedData) {
					var message:String = '';
					switch (_model.currentScreenState) {
						case ScreenTypes.TOP_CONTRIBUTORS:
							if (selectedReport.totalCount &&  selectedReport.aggregatedData[0] && selectedReport.aggregatedData[0].formattedValue)
								message = resourceManager.getString('analytics', 'topContributorsLbl',
									[selectedReport.totalCount, selectedReport.aggregatedData[0].formattedValue]);
							break;
						case ScreenTypes.MAP_OVERLAY:
							if (selectedReport.totalCount && selectedReport.aggregatedData[0] && selectedReport.aggregatedData[0].formattedValue)
								message = resourceManager.getString('analytics', 'mapOverlayLbl',
									[selectedReport.totalCount, selectedReport.aggregatedData[0].formattedValue]);
							break;
						case ScreenTypes.TOP_SYNDICATIONS:
							if (selectedReport.totalCount && selectedReport.aggregatedData[0] && selectedReport.aggregatedData[0].formattedValue)
								message = resourceManager.getString('analytics', 'topSyndicationsLbl',
									[selectedReport.totalCount, selectedReport.aggregatedData[0].formattedValue]);
							break;
						case ScreenTypes.TOP_SYNDICATIONS_DRILL_DOWN:
							if (selectedReport.objectIds && selectedReport.aggregatedData[0] && selectedReport.aggregatedData[0].formattedValue)
								message = resourceManager.getString('analytics', 'syndicationsDrillDownLbl',
									[selectedReport.totalCount, selectedReport.aggregatedData[0].formattedValue, selectedReport.objectName]);
							break;
						case ScreenTypes.MAP_OVERLAY_DRILL_DOWN:
							if (selectedReport.totalCount && selectedReport.aggregatedData[0] && selectedReport.aggregatedData[0].formattedValue)
								message = resourceManager.getString('analytics', 'mapOverlayLbl',
									[selectedReport.totalCount, selectedReport.aggregatedData[0].formattedValue]);
							break;
						case ScreenTypes.END_USER_ENGAGEMENT:
							if (selectedReport.aggregatedData[2].formattedValue 
								&& selectedReport.aggregatedData[1].formattedValue 
								&& selectedReport.aggregatedData[6].formattedValue 
								&& selectedReport.aggregatedData[0].formattedValue) {
								message = resourceManager.getString('analytics', 'endUserReportLbl',
									[selectedReport.aggregatedData[1].formattedValue, selectedReport.aggregatedData[6].formattedValue, 
										selectedReport.aggregatedData[2].formattedValue, selectedReport.aggregatedData[0].formattedValue]);
							}
							break;
						case ScreenTypes.END_USER_ENGAGEMENT_DRILL_DOWN:
							if (selectedReport.aggregatedData[1].formattedValue 
								&& selectedReport.aggregatedData[0].formattedValue && _model.drillDownName) {
								message = resourceManager.getString('analytics', 'endUserReportDrillDownLbl',
									[selectedReport.aggregatedData[1].formattedValue, selectedReport.aggregatedData[0].formattedValue, _model.drillDownName]);
							}
							break;
						default:
							// make sure we don't override another report's message
							return;
					}

					selectedReport.message = message;
				}
			}
		]]>
	</mx:Script>

	<dtn:DTN id="dtn" width="158" dataProvider="{_model.userDtnDp}" enabled="{!_model.loadingFlag}" change="{onDtnChange()}"
			 styleName="analyticsDtn"/>
	<mx:ViewStack id="userViewStack" selectedIndex="0" width="100%" height="{this.height - 15}" styleName="contentViewStack">
		<view:KalturaReportView id="topContributors" width="100%" dateOnlyFlag="{true}" kdpParams="{_model.context}"
								filterVo="{_model.filterMasks.topContrib}" loadChart="{_model.loadingChartFlag}"
								loadTotal="{_model.loadingTotalFlag}" loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								reportData="{_model.selectedReportData}" tableOrderBy="count_total"
								aggregatedHeaders="{_model.aggregateHeaders.topContrib}" tableHeaders="{_model.tableHeaders.topContrib}"
								dateRanger="{_model.shortTermDatesRanger}"
								tableNonSortableHeaders="{_model.tableNonSortableHeaders.topContrib}" showUsersFilter="false"
								showApplicationsFilter="false" dimCbDp="{_model.reportDimension.topContrib}"
								helpUrl="{'section_analytics_top_contributors'}" reportType="{KalturaReportType.TOP_CONTRIBUTORS}"
								label="{resourceManager.getString('analytics', 'topContributors')}" styleName="pageStyle"
								screenType="{ScreenTypes.TOP_CONTRIBUTORS}"/>
		<view:KalturaReportView id="mapOverlay" width="100%" dateOnlyFlag="{true}" kdpParams="{_model.context}"
								filterVo="{_model.filterMasks.mapOverlay}" reportData="{_model.selectedReportData}"
								loadChart="{_model.loadingChartFlag}" loadTotal="{_model.loadingTotalFlag}"
								loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}" showDimension="false"
								showLineChart="false" showKDP="false"
								tableOrderBy="count_plays" showUsersFilter="false" showApplicationsFilter="false"
								aggregatedHeaders="{_model.aggregateHeaders.mapOverlay}" tableHeaders="{_model.tableHeaders.mapOverlay}"
								dateRanger="{_model.shortTermDatesRanger}" drillDown="{onDrillDown(ScreenTypes.MAP_OVERLAY_DRILL_DOWN)}"
								helpUrl="{'section_analytics_map_overlay'}" reportType="{KalturaReportType.MAP_OVERLAY}"
								label="{resourceManager.getString('analytics', 'mapOverlay')}" styleName="pageStyle"
								screenType="{ScreenTypes.MAP_OVERLAY}"/>
		<view:KalturaReportView id="topSyndications" dateOnlyFlag="{true}" kdpParams="{_model.context}"
								filterVo="{_model.filterMasks.syndicator}" width="100%" height="100%" tableOrderBy="count_plays"
								loadChart="{_model.loadingChartFlag}" loadTotal="{_model.loadingTotalFlag}"
								loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								reportData="{_model.selectedReportData}" 
								showKDP="false" showUsersFilter="false" showApplicationsFilter="false"
								aggregatedHeaders="{_model.aggregateHeaders.syndicator}" tableHeaders="{_model.tableHeaders.syndicator}"
								dateRanger="{_model.shortTermDatesRanger}" dimCbDp="{_model.reportDimension.syndicator}"
								screenType="{ScreenTypes.TOP_SYNDICATIONS}"
								drillDown="{onDrillDown(ScreenTypes.TOP_SYNDICATIONS_DRILL_DOWN)}"
								helpUrl="{'section_analytics_top_syndications'}" reportType="{KalturaReportType.TOP_SYNDICATION}"
								label="{resourceManager.getString('analytics', 'topSyndications')}" styleName="pageStyle"/>
		<view:KalturaReportView id="userEngagement" width="100%" height="100%" dateOnlyFlag="{true}" kdpParams="{_model.context}"
								playbackContextFlag="{true}" screenType="{ScreenTypes.END_USER_ENGAGEMENT}"
								filterVo="{_model.filterMasks.userEngagement}" tableOrderBy="count_plays" loadChart="{_model.loadingChartFlag}"
								loadTotal="{_model.loadingTotalFlag}" loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								reportData="{_model.selectedReportData}"
								showKDP="false" 
								aggregatedHeaders="{_model.aggregateHeaders.userEngagement}"
								tableHeaders="{_model.tableHeaders.userEngagement}" dateRanger="{_model.shortTermDatesRanger}"
								tableNonSortableHeaders="{_model.tableNonSortableHeaders.userEngagement}"
								dimCbDp="{_model.reportDimension.userEngagement}"
								drillDown="{onDrillDown(ScreenTypes.END_USER_ENGAGEMENT_DRILL_DOWN)}"
								helpUrl="{'section_analytics_user_engagement'}" reportType="{KalturaReportType.USER_ENGAGEMENT}"
								label="{resourceManager.getString('analytics', 'userEngagement')}" styleName="pageStyle"/>
		<view:KalturaReportView id="syndicationsDrillDown" dateOnlyFlag="{true}" isDrillDown="{true}"
								filterVo="{_model.filterMasks.syndicator}" kdpParams="{_model.context}" width="100%" height="100%"
								creationComplete="{_model.selectedReportData.orderBy = 'count_plays'}" loadChart="{_model.loadingChartFlag}"
								loadTotal="{_model.loadingTotalFlag}" loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								showDimension="false" showLineChart="false"
								showKDP="false" screenType="{ScreenTypes.TOP_SYNDICATIONS_DRILL_DOWN}" showUsersFilter="false"
								showApplicationsFilter="false" aggregatedHeaders="{_model.aggregateHeaders.syndicator}"
								tableHeaders="{_model.tableHeaders.syndicator}" dateRanger="{_model.shortTermDatesRanger}"
								dimCbDp="{_model.reportDimension.syndicator}" reportData="{_model.selectedReportData}"
								backScreenType="{ScreenTypes.TOP_SYNDICATIONS}" helpUrl="{'section_analytics_syndication_drilldown'}"
								reportType="{KalturaReportType.TOP_SYNDICATION}"
								label="{resourceManager.getString('analytics', 'topSyndications')}" styleName="pageStyle"/>
		<view:KalturaReportView id="mapOverlayDrillDown" dateOnlyFlag="{true}" isDrillDown="{true}"
								filterVo="{_model.filterMasks.mapOverlay}" kdpParams="{_model.context}"
								reportData="{_model.selectedReportData}" loadChart="{_model.loadingChartFlag}"
								loadTotal="{_model.loadingTotalFlag}" loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								showDimension="false" showLineChart="false" 
								showKDP="false" showUsersFilter="false" showApplicationsFilter="false" tableOrderBy="count_plays"
								backScreenType="{ScreenTypes.MAP_OVERLAY}" aggregatedHeaders="{_model.aggregateHeaders.mapOverlay}"
								tableHeaders="{_model.tableHeaders.mapOverlay}" dateRanger="{_model.shortTermDatesRanger}"
								helpUrl="{'section_analytics_map_drilldown'}" reportType="{KalturaReportType.MAP_OVERLAY}"
								screenType="{ScreenTypes.MAP_OVERLAY_DRILL_DOWN}"
								label="{resourceManager.getString('analytics', 'mapOverlay')}" styleName="pageStyle"/>
		<view:KalturaReportView id="userEngagementDrillDown" dateOnlyFlag="{true}" isDrillDown="{true}" playbackContextFlag="{true}"
								filterVo="{_model.filterMasks.userEngagementDrilldown}" kdpParams="{_model.context}" width="100%"
								height="100%" creationComplete="{_model.selectedReportData.orderBy = 'count_plays'}"
								loadChart="{_model.loadingChartFlag}" loadTotal="{_model.loadingTotalFlag}"
								loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								screenType="{ScreenTypes.END_USER_ENGAGEMENT_DRILL_DOWN}" showKDP="false"
								showUsersFilter="false" 
								aggregatedHeaders="{_model.aggregateHeaders.userEngagementDrilldown}"
								tableHeaders="{_model.tableHeaders.userEngagementDrilldown}" dateRanger="{_model.shortTermDatesRanger}"
								tableNonSortableHeaders="{_model.tableNonSortableHeaders.userEngagementDrilldown}"
								dimCbDp="{_model.reportDimension.userEngagement}" reportData="{_model.selectedReportData}"
								backScreenType="{ScreenTypes.END_USER_ENGAGEMENT}" helpUrl="{'section_analytics_user_drilldown'}"
								reportType="{KalturaReportType.SPEFICIC_USER_ENGAGEMENT}"
								label="{resourceManager.getString('analytics', 'userEngagement')}" styleName="pageStyle"/>
	</mx:ViewStack>

</mx:HBox>
