<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:content="com.kaltura.kmc.modules.analytics.view.content.*"
		 xmlns:drilldown="com.kaltura.kmc.modules.analytics.view.content.drilldown.*"
		 xmlns:dtn="com.kaltura.kmc.modules.analytics.view.dtn.*"
		 xmlns:view="com.kaltura.kmc.modules.analytics.view.*" 
		 creationComplete="init(event)" hide="hideHandler(event)">
	<mx:Script>
		<![CDATA[
			import com.kaltura.kmc.events.KmcHelpEvent;
			import com.kaltura.kmc.modules.analytics.control.StateEvent;
			import com.kaltura.kmc.modules.analytics.model.AnalyticsModelLocator;
			import com.kaltura.kmc.modules.analytics.model.reportdata.ReportData;
			import com.kaltura.kmc.modules.analytics.model.types.ScreenTypes;
			import com.kaltura.types.KalturaReportType;
			
			import mx.binding.utils.BindingUtils;
			import mx.events.FlexEvent;


			private var _ready:Boolean = false;

			/**
			 * data model
			 * */
			[Bindable]
			private var _model:AnalyticsModelLocator = AnalyticsModelLocator.getInstance();


			/**
			 * watch model changes
			 * */
			public function init(event:Event = null):void {
				if (_ready) {
					BindingUtils.bindSetter(selectedReportChange, _model, "selectedReportData");
					BindingUtils.bindSetter(selectedEntryChange, _model, "selectedEntry");
					
					var stateEvent:StateEvent = new StateEvent(StateEvent.STATE_CHANGE,
						ScreenTypes.LIVE_CONTENT);
					stateEvent.dispatch();
					
					// initialize the first report:
					topContet.onShow();
				}
				else {
					_ready = true;
				}
			}


			/**
			 * trigger report update
			 * */
			private function selectedEntryChange(selectedEntry:Object):void {
				selectedReportChange(_model.selectedReportData);
			}


			/**
			 * set report message according to report data
			 * */
			private function selectedReportChange(report:ReportData):void {
				if (report && report.aggregatedData) {
					var message:String = '';
					switch (_model.currentScreenState) {
						case ScreenTypes.LIVE_CONTENT:
							if (report.totalCount && report.aggregatedData.length) {
								message = resourceManager.getString('analytics', 'topContentLbl',
									[report.totalCount, report.aggregatedData[0].formattedValue]);
							}

							break;
						
						default:
							// make sure we don't override another report's message
							return;
					}

					report.message = message;
				}
			}


			public function help():void {
				var anchor:String = (contentViewStack.selectedChild as KalturaReportView).helpUrl;
				dispatchEvent(new KmcHelpEvent(KmcHelpEvent.HELP, anchor));
			}
			
			protected function hideHandler(event:FlexEvent):void
			{
				topContet.onHide();
			}
			
		]]>
	</mx:Script>
	<dtn:DTN id="dtn" width="158" styleName="analyticsDtn" dataProvider="{_model.liveDtnDp}"
			 enabled="{!_model.loadingFlag}"/>
	<mx:ViewStack id="contentViewStack"
				  width="100%"
				  height="{this.height - 15}"
				  styleName="contentViewStack">
		<view:KalturaReportView id="topContet" styleName="pageStyle" width="100%" height="100%"
								label="{resourceManager.getString('analytics','live')}"
								reportType="{KalturaReportType.LIVE}"
								screenType="{ScreenTypes.LIVE_CONTENT}"
								loadChart="{_model.loadingChartFlag}" loadTotal="{_model.loadingTotalFlag}"
								loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								reportData="{_model.selectedReportData}"
								filterVo="{_model.filterMasks.liveContent}"
								showUsersFilter="false" showApplicationsFilter="false"
								showGraphHours="true"
								aggregatedHeaders="{_model.aggregateHeaders.liveContent}"
								tableHeaders="{_model.tableHeaders.liveContent}" tableOrderBy="count_plays"
								tableNonSortableHeaders="{_model.tableNonSortableHeaders.liveContent}"
								dateRanger="{_model.shortTermDatesRanger}" dimCbDp="{_model.reportDimension.liveContent}"
								helpUrl="{'section_analytics_live'}"
								/>
	</mx:ViewStack>

</mx:HBox>
