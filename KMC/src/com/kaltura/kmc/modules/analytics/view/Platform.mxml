<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" 
		 xmlns:view="com.kaltura.kmc.modules.analytics.view.*" xmlns:dtn="com.kaltura.kmc.modules.analytics.view.dtn.*">
	<mx:Script>
		<![CDATA[
			import com.kaltura.analytics.GoogleAnalyticsTracker;
			import com.kaltura.analytics.GoogleAnalyticsConsts;
			import com.kaltura.kmc.modules.analytics.view.dtn.DTNItem;
			import mx.events.FlexEvent;
			import mx.binding.utils.BindingUtils;
			import flexlib.scheduling.scheduleClasses.schedule_internal;
			import com.kaltura.kmc.modules.analytics.model.reportdata.ReportData;
			import com.kaltura.types.KalturaReportType;
			import com.kaltura.kmc.modules.analytics.model.AnalyticsModelLocator;
			import com.kaltura.kmc.modules.analytics.model.types.ScreenTypes;
			import com.kaltura.kmc.modules.analytics.control.StateEvent;
			import com.kaltura.kmc.events.KmcHelpEvent;
			
			
			[Bindable]
			private var _model:AnalyticsModelLocator = AnalyticsModelLocator.getInstance();
			
			private var _ready:Boolean = false;
			
			
			public function init(e:Event = null):void {
				if (_ready) {
					BindingUtils.bindSetter(onStateChange, _model, "currentScreenState");
					BindingUtils.bindSetter(selectedReportChange, _model, "selectedReportData");
					
					var stateEvent:StateEvent = new StateEvent(StateEvent.STATE_CHANGE,
						ScreenTypes.PLATFORM);
					stateEvent.dispatch();
					
					// initialize the first report:
					platforms.onShow();
				}
				else {
					_ready = true;
					addEventListener(FlexEvent.CREATION_COMPLETE, init);
				}
			}

			
			/**
			 * show view
			 * @param newState	new value for <code>_model.currentScreenState</code>
			 * */
			private function onStateChange(newState:int):void {
				var gaEvent:String;
				for (var i:int = 0; i < dtn.numChildren; i++)
					(dtn.getChildAt(i) as DTNItem).btn.styleName = "dtnButton";
				
				switch (newState) {
					case ScreenTypes.PLATFORM:
						views.selectedIndex = dtn.selectedIndex = 0;
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_PLATFORM_PLATFORMS;
						break;
					case ScreenTypes.OS:
						views.selectedIndex = dtn.selectedIndex = 1;
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_PLATFORM_OS;
						break;
					case ScreenTypes.BROWSER:
						views.selectedIndex = dtn.selectedIndex = 2;
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_PLATFORM_BROWSERS;
						break;
					case ScreenTypes.PLATFORM_DRILL_DOWN:
						views.selectedIndex = 3;
						dtn.selectedIndex = -1;
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_PLATFORM_PLATFORMS_DRILL_DOWN;
						break;
					
					default:
						// the new screen is not in Content's scope, need to hide panel
						(views.selectedChild as KalturaReportView).onHide();
				}
				if (gaEvent) {
					GoogleAnalyticsTracker.getInstance().sendToGA(GoogleAnalyticsConsts.PAGE_VIEW + gaEvent, GoogleAnalyticsConsts.ANALYTICS);
				}
			}
			
			
			public function help():void {
				var anchor:String = (views.selectedChild as KalturaReportView).helpUrl;
				dispatchEvent(new KmcHelpEvent(KmcHelpEvent.HELP, anchor));
			}
			
			
			/**
			 * handle sub-navigation
			 * */
			private function onDtnChange():void {
				switch (dtn.selectedIndex) {
					case 0:
						(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.PLATFORM)).dispatch();
						break;
					case 1:
						(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.OS)).dispatch();
						break;
					case 2:
						(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.BROWSER)).dispatch();
						break;
				}
			}
			
			
			/**
			 * handle navigation to drilldown
			 * */
			private function onDrillDown(newState:int):void {
				var stateEvent:StateEvent = new StateEvent(StateEvent.STATE_CHANGE, newState);
				stateEvent.dispatch();
			}

			
			private function selectedReportChange(selectedReport:ReportData):void {
				if (selectedReport && selectedReport.aggregatedData) {
					var message:String = ''; 
					switch (_model.currentScreenState) {
						case ScreenTypes.PLATFORM:
							if (selectedReport.totalCount &&  selectedReport.aggregatedData[0] && selectedReport.aggregatedData[0].formattedValue)
								message = resourceManager.getString('analytics', 'platformsLbl',
									[selectedReport.aggregatedData[0].formattedValue, selectedReport.totalCount]);
							break;
						case ScreenTypes.PLATFORM_DRILL_DOWN:
							if (selectedReport.totalCount && selectedReport.aggregatedData[0] && selectedReport.aggregatedData[0].formattedValue)
								message = resourceManager.getString('analytics', 'platformDrilldownLbl',
									[selectedReport.aggregatedData[0].formattedValue, selectedReport.totalCount, selectedReport.objectName]);  
							break;
						case ScreenTypes.OS:
							if (selectedReport.totalCount && selectedReport.aggregatedData[0] && selectedReport.aggregatedData[0].formattedValue)
								message = resourceManager.getString('analytics', 'opsysLbl',
									[selectedReport.aggregatedData[0].formattedValue, selectedReport.totalCount]);
							break;
						case ScreenTypes.BROWSER:
							if (selectedReport.totalCount && selectedReport.aggregatedData[0] && selectedReport.aggregatedData[0].formattedValue)
								message = resourceManager.getString('analytics', 'browsersLbl',
									[selectedReport.aggregatedData[0].formattedValue, selectedReport.totalCount]);
							break;
						
						default:
							// make sure we don't override another report's message
							return;
					}
					
					selectedReport.message = message;
				}
			}
		]]>
	</mx:Script>
	
	<dtn:DTN id="dtn" width="158" styleName="analyticsDtn" dataProvider="{_model.platformDtnDp}"
			 enabled="{!_model.loadingFlag}" change="onDtnChange()"/>
	
	<mx:ViewStack id="views" width="100%" height="{this.height - 15}" styleName="contentViewStack" >
		<view:KalturaReportView id="platforms" width="100%" height="100%" 
								screenType="{ScreenTypes.PLATFORM}" filterVo="{_model.filterMasks.platforms}" tableOrderBy="count_plays" 
								loadChart="{_model.loadingChartFlag}" loadTotal="{_model.loadingTotalFlag}" 
								loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								reportData="{_model.selectedReportData}" dateOnlyFlag="true" showUsersFilter="false"
								messageTip="{resourceManager.getString('analytics', 'sinceAug12')}"
								aggregatedHeaders="{_model.aggregateHeaders.platforms}"
								tableHeaders="{_model.tableHeaders.platforms}" dateRanger="{_model.shortTermDatesRanger}"
								tableNonSortableHeaders="{_model.tableNonSortableHeaders.platforms}"
								dimCbDp="{_model.reportDimension.platform}"
								drillDown="{onDrillDown(ScreenTypes.PLATFORM_DRILL_DOWN)}"
								helpUrl="{'section_analytics_platform'}" reportType="{KalturaReportType.PLATFORMS}"
								label="{resourceManager.getString('analytics', 'platforms')}" styleName="pageStyle"/>
		<view:KalturaReportView id="opsys" width="100%" height="100%" 
								screenType="{ScreenTypes.OS}" filterVo="{_model.filterMasks.opsys}" tableOrderBy="count_plays"
								loadChart="{_model.loadingChartFlag}" loadTotal="{_model.loadingTotalFlag}" 
								loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}" 
								showColumnChart="true" showLineChart="false"
								reportData="{_model.selectedReportData}" dateOnlyFlag="true" showUsersFilter="false"
								messageTip="{resourceManager.getString('analytics', 'sinceAug12')}"
								aggregatedHeaders="{_model.aggregateHeaders.opsys}"
								tableHeaders="{_model.tableHeaders.opsys}" dateRanger="{_model.shortTermDatesRanger}"
								tableNonSortableHeaders="{_model.tableNonSortableHeaders.opsys}"
								dimCbDp="{_model.reportDimension.opsys}"
								reportType="{KalturaReportType.OPERATION_SYSTEM}"
								helpUrl="{'section_analytics_os'}"
								label="{resourceManager.getString('analytics', 'opsyss')}" styleName="pageStyle"/>
		<view:KalturaReportView id="browsers" width="100%" height="100%" 
								screenType="{ScreenTypes.BROWSER}" filterVo="{_model.filterMasks.browsers}" tableOrderBy="count_plays"
								loadChart="{_model.loadingChartFlag}" loadTotal="{_model.loadingTotalFlag}" 
								loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								showColumnChart="true" showLineChart="false"
								reportData="{_model.selectedReportData}" dateOnlyFlag="true" showUsersFilter="false" 
								messageTip="{resourceManager.getString('analytics', 'sinceAug12')}"
								aggregatedHeaders="{_model.aggregateHeaders.browsers}"
								tableHeaders="{_model.tableHeaders.browsers}" dateRanger="{_model.shortTermDatesRanger}"
								tableNonSortableHeaders="{_model.tableNonSortableHeaders.browsers}"
								dimCbDp="{_model.reportDimension.browsers}"
								reportType="{KalturaReportType.BROWSERS}" 
								helpUrl="{'section_analytics_browsers'}"
								label="{resourceManager.getString('analytics', 'browsers')}" styleName="pageStyle" />
		<view:KalturaReportView id="platformDrilldown" width="100%" height="100%" 
								screenType="{ScreenTypes.PLATFORM_DRILL_DOWN}" filterVo="{_model.filterMasks.platforms}" tableOrderBy="count_plays"
								loadChart="{_model.loadingChartFlag}" loadTotal="{_model.loadingTotalFlag}" 
								loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								showColumnChart="true" showLineChart="false"
								reportData="{_model.selectedReportData}" dateOnlyFlag="true" showUsersFilter="false" 
								messageTip="{resourceManager.getString('analytics', 'sinceAug12')}"
								aggregatedHeaders="{_model.aggregateHeaders.platforms}"
								tableHeaders="{_model.tableHeaders.platformDrilldown}" dateRanger="{_model.shortTermDatesRanger}"
								tableNonSortableHeaders="{_model.tableNonSortableHeaders.platformDrilldown}"
								dimCbDp="{_model.reportDimension.platformDrilldown}"
								reportType="{KalturaReportType.PLATFORMS}" isDrillDown="true"
								backScreenType="{ScreenTypes.PLATFORM}"
								helpUrl="{'section_analytics_platform_drilldown'}"
								label="{resourceManager.getString('analytics', 'platforms')}" styleName="pageStyle" />
	</mx:ViewStack>
</mx:HBox>
